##------ Dec 9, 2013 12:03:11 PM ------##

R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> cat("welcome to CRAN-R")
welcome to CRAN-R> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
randomForest 4.6-7
Type rfNews() to see new features/changes/bug fixes.
> library(quantmod)
Loading required package: Defaults
Loading required package: xts
Loading required package: zoo

Attaching package: 'zoo'

The following object is masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: TTR
Version 0.4-0 included new data defaults. See ?getSymbols.
> library(TTR)
> library(tseries)

    'tseries' version: 0.10-32

    'tseries' is a package for time series analysis and computational
    finance.

    See 'library(help="tseries")' for details.

> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> for(i in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]))
+ 	
+ tickerSymbol <- listOfCompanies[i]
+ 
+ 
+ 
+ 
+ now1 <- Sys.time()
+ 
+ #tickerSymbol <- "IBM"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ }
Error: object 'i' not found
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> for(i in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies" && "i"]))
+ 	
+ tickerSymbol <- listOfCompanies[i]
+ 
+ 
+ 
+ 
+ now1 <- Sys.time()
+ 
+ #tickerSymbol <- "IBM"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ }
Error in ls() != "listOfCompanies" && "i" : invalid 'y' type in 'x && y'
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> for(i in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies","i"]))
+ 	
+ tickerSymbol <- listOfCompanies[i]
+ 
+ 
+ 
+ 
+ now1 <- Sys.time()
+ 
+ #tickerSymbol <- "IBM"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ }
Error in ls()[ls() != "listOfCompanies", "i"] : 
  incorrect number of dimensions
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> library(gdata)
Error in library(gdata) : there is no package called 'gdata'
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> for(i in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["i"]))
+ 	
+ tickerSymbol <- listOfCompanies[i]
+ 
+ 
+ 
+ 
+ now1 <- Sys.time()
+ 
+ #tickerSymbol <- "IBM"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Loading required package: XML
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.23  -3.26   0.64                -3.02
Close.SMA.20              4.23  47.20  -3.95                46.86
Close.SMA.50              1.17  50.62  -2.66                49.96
daily.returns             3.61  27.44 -19.24                17.28
ticker.return.factors   284.72 378.16 233.76               357.48
Open                      6.15  50.02   3.66                50.81
Close                     4.71  52.75  -0.69                52.65
High                      3.15  48.82   1.89                49.04
Low                       1.15  52.43   6.58                52.60
Volume                  -12.03  41.31  20.88                36.85
ticker.sma.signals       -3.67  -1.08  -0.61                -2.67
ticker.bbands.signals    -2.95  -1.97  -3.52                -3.84
dn                        3.58  45.77   4.45                46.15
mavg                      4.47  46.28  -2.21                46.46
up                       -1.36  48.01   2.30                47.66
pctB                      3.74  39.48   1.07                39.03
mfi                      -4.11  39.79  17.58                40.86
Close.EMA.14             13.06  41.72  11.95                45.52
ticker.rsi.signals        2.87  12.43  -2.21                11.35
                        MeanDecreaseGini
ticker.multisma.signals             0.16
Close.SMA.20                        7.06
Close.SMA.50                        7.53
daily.returns                       5.53
ticker.return.factors             195.25
Open                               10.39
Close                              10.59
High                                9.06
Low                                10.73
Volume                             14.72
ticker.sma.signals                  0.37
ticker.bbands.signals               0.32
dn                                  8.90
mavg                                6.88
up                                  7.39
pctB                                8.53
mfi                                 9.65
Close.EMA.14                       10.33
ticker.rsi.signals                  0.52
Time difference of 67.8951 secs
[1] "Training Arima Model from Training dataset"
This is forecast 4.8 

[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 103.5847 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 1.21%
Confusion matrix:
     buy hold sell class.error
buy   64    3    4  0.09859155
hold   0  760    0  0.00000000
sell   1    3   71  0.05333333
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.61  -1.17  -0.31                -1.54
Close.SMA.20             -3.03  45.99   1.36                45.78
Close.SMA.50            -10.71  55.62  -3.83                54.20
daily.returns            12.43  30.84 -17.30                25.71
ticker.return.factors   235.90 334.84 232.22               320.10
Open                     13.62  52.14  -8.49                52.53
Close                    20.80  50.31  -5.59                51.47
High                     11.00  50.45  -5.00                51.13
Low                      14.64  55.00  -2.09                55.95
Volume                  -15.76  34.46  25.72                32.24
ticker.sma.signals       -4.18  -0.75   1.61                -1.96
ticker.bbands.signals     1.00   2.06   1.41                 2.56
dn                        4.03  50.33   6.02                51.27
mavg                     -2.35  46.42   2.67                46.49
up                      -12.96  55.66   4.91                55.01
pctB                     16.15  31.73  -2.64                33.72
mfi                       6.74  34.91   0.16                34.14
Close.EMA.14             13.32  37.14  -6.23                37.66
ticker.rsi.signals        2.16   2.10  -1.55                 2.08
                        MeanDecreaseGini
ticker.multisma.signals             0.26
Close.SMA.20                        6.15
Close.SMA.50                        6.96
daily.returns                       6.79
ticker.return.factors             152.69
Open                                7.62
Close                               7.85
High                                6.73
Low                                 8.58
Volume                             12.44
ticker.sma.signals                  0.20
ticker.bbands.signals               0.02
dn                                  8.35
mavg                                6.12
up                                  6.33
pctB                                6.86
mfi                                 6.16
Close.EMA.14                        6.30
ticker.rsi.signals                  0.11
Time difference of 69.05537 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["i"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: package 'pmml' was built under R version 3.0.2 
4: In rm(list = (ls()[ls() != "listOfCompanies"]["i"])) :
  object 'NA' not found
5: 'memory.limit()' is Windows-specific 
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> 
> 
> x <- rnorm(3)
> lvl <- c("a", "b", "c")
> df <- data.frame(x, lvl)
> str(df)
'data.frame':	3 obs. of  2 variables:
 $ x  : num  0.814 0.969 -0.445
 $ lvl: Factor w/ 3 levels "a","b","c": 1 2 3
> 
> rbind(df, data.frame(x, lvl = "d"))
           x lvl
1  0.8142113   a
2  0.9691260   b
3 -0.4448226   c
4  0.8142113   d
5  0.9691260   d
6 -0.4448226   d
> str(df)
'data.frame':	3 obs. of  2 variables:
 $ x  : num  0.814 0.969 -0.445
 $ lvl: Factor w/ 3 levels "a","b","c": 1 2 3
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> 
> 
> x <- rnorm(3)
> lvl <- c("a", "b", "c")
> df <- data.frame(x, lvl)
> str(df)
'data.frame':	3 obs. of  2 variables:
 $ x  : num  0.97 -0.0712 0.0394
 $ lvl: Factor w/ 3 levels "a","b","c": 1 2 3
> 
> df <- data.frame(x, lvl = "d")
> str(df)
'data.frame':	3 obs. of  2 variables:
 $ x  : num  0.97 -0.0712 0.0394
 $ lvl: Factor w/ 1 level "d": 1 1 1
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> 
> 
> x <- rnorm(3)
> lvl <- c("a", "b", "c")
> df <- data.frame(x, lvl)
> str(df)
'data.frame':	3 obs. of  2 variables:
 $ x  : num  1.59 -1.93 -1.4
 $ lvl: Factor w/ 3 levels "a","b","c": 1 2 3
> 
> lvl <- c("a", "b", "c","d")
> df <- data.frame(x, lvl)
Error in data.frame(x, lvl) : 
  arguments imply differing number of rows: 3, 4
> str(df)
'data.frame':	3 obs. of  2 variables:
 $ x  : num  1.59 -1.93 -1.4
 $ lvl: Factor w/ 3 levels "a","b","c": 1 2 3
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> 
> 
> x <- rnorm(3)
> lvl <- c("a","b","c")
> df <- as.factor(x, lvl)
Error in as.factor(x, lvl) : unused argument (lvl)
> str(df)
function (x, df1, df2, ncp, log = FALSE)  
> 
> lvl <- c("a","b","c","d")
> df <- factor(x, lvl)
> str(df)
 Factor w/ 4 levels "a","b","c","d": NA NA NA
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> 
> 
> x <- rnorm(3)
> lvl <- c("a","b","c")
> df <- factor(x, lvl)
> str(df)
 Factor w/ 3 levels "a","b","c": NA NA NA
> 
> lvl <- c("a","b","c","d")
> df <- factor(x, lvl)
> str(df)
 Factor w/ 4 levels "a","b","c","d": NA NA NA
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> #ticker <- getYahooData("IBM", 20120101, 20131111 ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)
> 
> #tdi <- TDI(ticker[,"Close"], n=20)  # trend 
> 
> #d <- data.frame(ticker.arima1,tickerTestData)
> 
> v <- 89
> rm(list=(ls()[ls()!="ticker.rfmodel"]))
> 
> 
> x <- rnorm(3)
> lvl <- c("a","b","c")
> df1 <- factor(x, lvl)
> str(df)
function (x, df1, df2, ncp, log = FALSE)  
> 
> lvl <- c("a","b","c","d")
> df <- factor(df1, lvl)
> str(df)
 Factor w/ 4 levels "a","b","c","d": NA NA NA
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> listOfCompanies <- c("AAPL","IBM","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> for(counter in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ 
+ 
+ now1 <- Sys.time()
+ 
+ #tickerSymbol <- "IBM"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.39  -1.58   1.06                -1.64
Close.SMA.20              6.68  45.09  -1.30                45.74
Close.SMA.50              2.41  50.44  -4.27                49.79
daily.returns             0.75  24.27 -19.43                13.10
ticker.return.factors   286.74 385.26 236.16               362.94
Open                      4.73  49.46   2.24                50.11
Close                     5.95  53.13  -1.96                53.34
High                      2.94  49.03   2.46                49.39
Low                       2.03  50.73   5.27                50.76
Volume                  -11.61  40.92  21.28                36.99
ticker.sma.signals       -3.95  -2.61  -3.02                -4.87
ticker.bbands.signals    -2.11   0.35  -3.46                -1.60
dn                        3.31  45.52   4.26                46.23
mavg                      5.43  46.00  -2.68                45.97
up                        2.48  48.51  -1.56                48.20
pctB                      5.02  38.79  -2.49                38.16
mfi                      -3.04  39.00  17.17                40.28
Close.EMA.14             14.27  41.34  11.69                45.26
ticker.rsi.signals        4.18  13.76  -0.38                13.55
                        MeanDecreaseGini
ticker.multisma.signals             0.17
Close.SMA.20                        6.87
Close.SMA.50                        7.44
daily.returns                       5.50
ticker.return.factors             196.53
Open                               10.29
Close                              10.75
High                                8.75
Low                                10.54
Volume                             14.79
ticker.sma.signals                  0.37
ticker.bbands.signals               0.31
dn                                  8.72
mavg                                6.95
up                                  7.41
pctB                                8.48
mfi                                 9.44
Close.EMA.14                       10.29
ticker.rsi.signals                  0.54
Time difference of 58.41107 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 89.42331 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.88%
Confusion matrix:
     buy hold sell class.error
buy   50    4    2  0.10714286
hold   0  795    0  0.00000000
sell   1    1   56  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -6.85  -1.28  -2.89                -4.32
Close.SMA.20              3.53  46.26  -3.41                46.09
Close.SMA.50              0.66  46.61  -8.97                44.93
daily.returns            -3.82  20.42 -15.82                 7.67
ticker.return.factors   203.87 292.24 210.44               287.04
Open                      7.62  44.28  -0.74                44.81
Close                    10.96  46.56   0.62                47.63
High                      5.58  47.03   4.88                47.66
Low                       3.77  50.14   2.67                50.54
Volume                   -1.86  44.32  -4.08                37.30
ticker.sma.signals        6.62   7.44  -2.82                 8.20
ticker.bbands.signals     2.99   6.78  -1.99                 6.90
dn                        4.78  40.19   1.51                40.78
mavg                      1.37  45.76  -3.97                45.36
up                       -4.35  41.51   5.37                41.51
pctB                      5.92  27.25  -4.30                25.47
mfi                      -6.20  32.74 -10.55                21.38
Close.EMA.14              5.69  42.57   3.66                41.69
ticker.rsi.signals       -6.43   9.33  -1.78                 6.94
                        MeanDecreaseGini
ticker.multisma.signals             0.51
Close.SMA.20                        5.23
Close.SMA.50                        5.54
daily.returns                       3.11
ticker.return.factors             115.53
Open                                6.94
Close                               8.59
High                                8.09
Low                                 8.32
Volume                              7.33
ticker.sma.signals                  0.20
ticker.bbands.signals               0.13
dn                                  5.98
mavg                                5.25
up                                  5.36
pctB                                5.78
mfi                                 6.26
Close.EMA.14                        7.97
ticker.rsi.signals                  0.20
Time difference of 46.17604 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 77.65296 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.44%
Confusion matrix:
     buy hold sell class.error
buy   87    2    0  0.02247191
hold   0  725    0  0.00000000
sell   1    1   90  0.02173913
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -3.53   2.91  -2.58                 0.63
Close.SMA.20              5.70  53.35   2.86                53.42
Close.SMA.50              0.36  56.49  -7.35                53.24
daily.returns             7.58  29.03 -13.07                21.52
ticker.return.factors   250.22 375.93 251.47               349.23
Open                     14.71  56.46  -8.32                56.21
Close                    24.10  54.66  -5.19                57.00
High                      8.84  52.15  -0.43                52.45
Low                      11.40  59.72   8.16                60.95
Volume                   -2.20   9.17   2.11                 6.64
ticker.sma.signals        6.81   0.43  -1.32                 2.35
ticker.bbands.signals     8.90  -7.06   1.04                -4.10
dn                       -0.55  53.96  11.06                54.16
mavg                      5.22  55.35   3.67                55.93
up                       -0.22  50.39   8.40                50.78
pctB                     -2.63  33.03  11.67                33.25
mfi                      -4.72  44.82  14.62                44.45
Close.EMA.14             13.29  46.87  -2.57                47.54
ticker.rsi.signals        3.95   4.08  -7.70                 2.52
                        MeanDecreaseGini
ticker.multisma.signals             0.43
Close.SMA.20                        8.28
Close.SMA.50                        7.22
daily.returns                       5.66
ticker.return.factors             187.19
Open                                8.95
Close                              10.52
High                                8.09
Low                                10.86
Volume                              7.64
ticker.sma.signals                  0.17
ticker.bbands.signals               0.34
dn                                 10.16
mavg                                8.61
up                                  8.08
pctB                                7.64
mfi                                 8.31
Close.EMA.14                        9.28
ticker.rsi.signals                  0.20
Time difference of 55.68814 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"])) :
  object 'NA' not found
4: 'memory.limit()' is Windows-specific 
5: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"])) :
  object 'NA' not found
6: 'memory.limit()' is Windows-specific 
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "IBM"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.99%
Confusion matrix:
     buy hold sell class.error
buy   50    4    2  0.10714286
hold   0  795    0  0.00000000
sell   1    2   55  0.05172414
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -6.89  -0.59  -1.63                -3.04
Close.SMA.20              2.51  45.35  -3.39                45.17
Close.SMA.50             -1.62  45.54  -8.68                43.83
daily.returns            -1.88  19.02 -17.77                 6.12
ticker.return.factors   204.56 292.53 210.26               287.97
Open                      9.12  43.63  -1.66                44.13
Close                     9.87  44.77   0.27                45.73
High                      4.73  46.88   4.51                47.51
Low                       5.40  49.92   2.61                50.44
Volume                   -3.37  46.30  -3.84                38.95
ticker.sma.signals        7.68   6.52  -4.33                 7.46
ticker.bbands.signals     2.97   6.46  -1.96                 6.49
dn                        2.01  40.74   2.07                40.71
mavg                      4.36  45.40  -4.10                45.17
up                       -2.86  40.43   6.22                40.68
pctB                      6.06  27.76  -2.87                26.21
mfi                      -6.88  33.32 -11.08                21.19
Close.EMA.14              5.48  42.62   2.39                41.48
ticker.rsi.signals       -4.87   9.06  -3.57                 6.50
                        MeanDecreaseGini
ticker.multisma.signals             0.51
Close.SMA.20                        5.20
Close.SMA.50                        5.46
daily.returns                       3.07
ticker.return.factors             116.47
Open                                7.02
Close                               8.48
High                                8.12
Low                                 8.21
Volume                              7.22
ticker.sma.signals                  0.21
ticker.bbands.signals               0.13
dn                                  6.12
mavg                                5.22
up                                  5.28
pctB                                5.75
mfi                                 6.21
Close.EMA.14                        7.87
ticker.rsi.signals                  0.20
Time difference of 46.74078 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 79.71125 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "INTC"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.44%
Confusion matrix:
     buy hold sell class.error
buy   87    2    0  0.02247191
hold   0  725    0  0.00000000
sell   1    1   90  0.02173913
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -4.36   0.45  -3.06                -2.22
Close.SMA.20              6.65  54.45   2.10                54.49
Close.SMA.50             -1.39  54.71  -6.86                51.54
daily.returns             7.71  29.69 -14.85                21.69
ticker.return.factors   249.19 385.25 252.60               353.92
Open                     14.80  56.24 -10.26                55.57
Close                    23.06  54.83  -4.81                56.65
High                      8.69  52.10  -1.23                52.25
Low                      12.22  59.42   5.17                60.23
Volume                   -1.26   8.94   3.46                 7.59
ticker.sma.signals        6.78   0.06  -2.59                 1.77
ticker.bbands.signals     9.72  -5.92  -0.71                -3.01
dn                       -1.49  54.15  12.03                54.19
mavg                      5.68  53.60   2.60                54.22
up                        0.68  48.20   8.06                48.76
pctB                     -4.61  34.53  11.67                33.78
mfi                      -6.40  44.65  14.84                44.10
Close.EMA.14             12.10  48.37  -0.86                48.72
ticker.rsi.signals        4.51   3.43  -9.17                 1.90
                        MeanDecreaseGini
ticker.multisma.signals             0.40
Close.SMA.20                        8.45
Close.SMA.50                        7.05
daily.returns                       5.59
ticker.return.factors             187.59
Open                                8.82
Close                              10.72
High                                7.87
Low                                10.68
Volume                              7.69
ticker.sma.signals                  0.17
ticker.bbands.signals               0.35
dn                                 10.26
mavg                                8.37
up                                  8.12
pctB                                7.70
mfi                                 8.18
Close.EMA.14                        9.06
ticker.rsi.signals                  0.19
Time difference of 55.96624 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 87.78796 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "TSLA"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 382
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 2.51%
Confusion matrix:
     buy hold sell class.error
buy   53    0    1  0.01851852
hold   2  169    0  0.01169591
sell   1    3   50  0.07407407
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   1.00  -3.00  -2.23                -3.19
Close.SMA.20             -7.27  35.60   7.73                33.82
Close.SMA.50             11.46  40.56  -0.56                38.95
daily.returns            -6.74  12.04  -0.39                 5.45
ticker.return.factors   179.12 266.56 183.30               253.80
Open                     11.25  36.51  10.88                40.96
Close                    13.95  35.46   6.00                39.50
High                      6.98  36.49   7.01                38.28
Low                      11.03  36.46  12.89                41.41
Volume                    4.22   8.54   8.31                12.45
ticker.sma.signals       -1.06  -3.76   3.16                -2.71
ticker.bbands.signals    -2.21   3.15  -3.79                -1.80
dn                        3.99  38.74  -5.86                35.24
mavg                     -5.87  36.78  10.19                36.02
up                       -6.66  42.48   2.94                38.22
pctB                     11.66  27.01   1.65                28.81
mfi                      17.56  30.98   2.17                33.02
Close.EMA.14             14.90  34.27  -3.83                33.13
ticker.rsi.signals        5.41  10.62  -5.18                 8.60
                        MeanDecreaseGini
ticker.multisma.signals             0.02
Close.SMA.20                        3.43
Close.SMA.50                        5.12
daily.returns                       2.73
ticker.return.factors              88.75
Open                                4.88
Close                               4.28
High                                4.12
Low                                 4.66
Volume                              4.99
ticker.sma.signals                  0.15
ticker.bbands.signals               0.10
dn                                  4.40
mavg                                3.41
up                                  4.72
pctB                                4.45
mfi                                 7.39
Close.EMA.14                        4.80
ticker.rsi.signals                  0.31
Time difference of 22.69034 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 376

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 52.20896 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","TSLA","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "AAPL"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.65  -2.18   1.86                -1.90
Close.SMA.20              5.61  45.84  -3.17                45.82
Close.SMA.50              1.23  51.11  -3.19                50.36
daily.returns             0.30  24.84 -19.72                13.73
ticker.return.factors   284.09 381.77 234.06               359.78
Open                      4.67  50.58   3.85                51.17
Close                     5.47  52.27  -1.53                52.20
High                      3.95  49.42   2.75                49.82
Low                       2.53  52.32   7.81                52.65
Volume                  -13.70  40.90  21.67                35.85
ticker.sma.signals       -3.95  -3.18  -1.40                -4.88
ticker.bbands.signals    -1.57  -0.02  -4.12                -1.92
dn                        3.43  45.02   4.56                45.98
mavg                      4.37  45.92  -2.74                45.54
up                       -0.46  48.81   2.87                48.45
pctB                      4.20  38.97  -0.66                38.43
mfi                      -3.79  41.29  18.39                41.91
Close.EMA.14             12.96  41.34  10.48                45.03
ticker.rsi.signals        3.98  12.37  -0.08                12.05
                        MeanDecreaseGini
ticker.multisma.signals             0.17
Close.SMA.20                        7.04
Close.SMA.50                        7.43
daily.returns                       5.50
ticker.return.factors             195.58
Open                               10.32
Close                              10.48
High                                9.00
Low                                10.81
Volume                             14.93
ticker.sma.signals                  0.38
ticker.bbands.signals               0.31
dn                                  8.61
mavg                                7.04
up                                  7.42
pctB                                8.46
mfi                                 9.61
Close.EMA.14                       10.21
ticker.rsi.signals                  0.54
Time difference of 51.94436 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 83.31716 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","TSLA","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "GOOG"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.77%
Confusion matrix:
     buy hold sell class.error
buy   61    1    3  0.06153846
hold   0  762    0  0.00000000
sell   1    2   74  0.03896104
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.89   0.34   3.81                 1.07
Close.SMA.20              1.79  46.60  -2.59                46.61
Close.SMA.50              1.73  48.69  -2.41                48.35
daily.returns             5.35  25.83 -17.30                16.35
ticker.return.factors   216.45 320.63 241.02               309.51
Open                      3.98  47.48   2.39                48.29
Close                    12.57  52.92  -1.59                53.80
High                      7.31  48.37  -1.64                48.78
Low                       7.38  51.33   2.88                52.23
Volume                    5.25  54.14  23.03                56.40
ticker.sma.signals       -3.10  -4.70  -5.08                -7.23
ticker.bbands.signals    -2.90   7.51   0.24                 6.48
dn                       10.75  45.73  -3.74                46.20
mavg                      2.50  46.00  -2.29                46.01
up                       -2.22  45.79  -1.08                45.17
pctB                     -6.72  38.48  -2.50                35.44
mfi                      -7.00  41.38   3.62                37.87
Close.EMA.14             -5.22  41.34  -8.62                37.56
ticker.rsi.signals       -4.75  13.67  -0.55                10.88
                        MeanDecreaseGini
ticker.multisma.signals             0.57
Close.SMA.20                        6.06
Close.SMA.50                        6.29
daily.returns                       5.11
ticker.return.factors             146.80
Open                                7.17
Close                               8.39
High                                7.15
Low                                 8.12
Volume                             13.60
ticker.sma.signals                  0.26
ticker.bbands.signals               0.40
dn                                  7.71
mavg                                6.08
up                                  6.62
pctB                                6.17
mfi                                 7.07
Close.EMA.14                        5.99
ticker.rsi.signals                  0.33
Time difference of 51.48451 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 82.28671 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "JPM"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.23%
Confusion matrix:
     buy hold sell class.error
buy  134    0    2  0.01470588
hold   0  606    0  0.00000000
sell   0    0  138  0.00000000
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.08  -3.11   7.06                 0.53
Close.SMA.20             11.17  53.56   9.86                55.34
Close.SMA.50              8.59  56.45   0.18                54.57
daily.returns            12.44  37.94  -5.72                35.11
ticker.return.factors   270.59 402.61 262.65               370.98
Open                     13.22  49.10  10.71                51.75
Close                    31.27  57.64   1.56                61.25
High                     10.66  48.02   8.77                49.82
Low                      22.23  53.85   6.88                56.77
Volume                   12.21  52.52  14.75                52.62
ticker.sma.signals        5.95  -0.25  -1.29                 1.75
ticker.bbands.signals    -0.09   0.69  -1.88                -0.25
dn                       19.78  72.98  22.65                76.97
mavg                     11.66  54.96   8.22                56.34
up                      -24.00  53.75  29.09                53.64
pctB                      3.27  33.89   8.37                33.78
mfi                      -2.82  32.76  -1.88                25.32
Close.EMA.14              1.39  39.29   5.28                36.86
ticker.rsi.signals       -1.21  -0.76   0.55                -0.94
                        MeanDecreaseGini
ticker.multisma.signals             0.43
Close.SMA.20                       11.29
Close.SMA.50                       11.55
daily.returns                       8.94
ticker.return.factors             250.77
Open                               11.66
Close                              14.59
High                               10.52
Low                                13.68
Volume                             14.41
ticker.sma.signals                  0.59
ticker.bbands.signals               0.21
dn                                 19.46
mavg                               11.43
up                                 11.74
pctB                                9.29
mfi                                 9.31
Close.EMA.14                        9.30
ticker.rsi.signals                  0.13
Time difference of 59.47981 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 92.53233 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "WFC"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
Error in file(file, "rt") : cannot open the connection
In addition: Warning messages:
1: 'memory.limit()' is Windows-specific 
2: In file(file, "rt") : unable to resolve 'ichart.finance.yahoo.com'
> 
> print("Training Random Forest Model from training dataset")
[1] "Training Random Forest Model from training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 2.84%
Confusion matrix:
     buy hold sell class.error
buy   19    1    0        0.05
hold   0  357    0        0.00
sell   4    6    0        1.00
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -6.53  -4.34  -6.15                -7.85
Close.SMA.20             -1.49  35.09 -13.54                34.35
Close.SMA.50             -0.39  30.09  -9.87                29.68
daily.returns            -2.97  -3.14   2.86                -2.94
ticker.return.factors   157.00 170.38  70.88               171.08
Open                     -6.25  33.81  -0.60                33.04
Close                    16.04  34.99 -17.56                36.22
High                      4.79  34.04 -11.11                34.14
Low                       0.84  35.87  -9.22                35.77
Volume                    0.69  21.86 -12.70                18.08
ticker.sma.signals        1.71   5.54  -3.03                 4.99
ticker.bbands.signals     3.04  -1.89  -1.96                -1.00
dn                      -10.83  33.28  -4.73                31.50
mavg                     -1.28  34.95 -14.25                34.25
up                        0.07  33.37 -12.53                32.83
pctB                      0.56  27.17 -10.24                25.85
mfi                      -4.85  27.83 -10.20                24.15
Close.EMA.14             -0.54  30.37 -10.20                28.85
ticker.rsi.signals       -3.18   5.70   1.31                 4.34
                        MeanDecreaseGini
ticker.multisma.signals             0.39
Close.SMA.20                        1.71
Close.SMA.50                        1.95
daily.returns                       1.10
ticker.return.factors              29.04
Open                                2.07
Close                               2.88
High                                2.22
Low                                 2.61
Volume                              1.86
ticker.sma.signals                  0.09
ticker.bbands.signals               0.05
dn                                  2.27
mavg                                1.70
up                                  1.47
pctB                                1.49
mfi                                 1.51
Close.EMA.14                        1.72
ticker.rsi.signals                  0.04
Time difference of 13.3236 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 46.76126 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "WFC"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.81%
Confusion matrix:
     buy hold sell class.error
buy  126    1    4  0.03816794
hold   0  592    0  0.00000000
sell   2    0  143  0.01379310
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.55   0.41  -2.24                -0.35
Close.SMA.20             -2.02  58.04  11.98                58.73
Close.SMA.50              2.67  62.18   8.68                61.95
daily.returns            10.41  51.23 -10.89                41.59
ticker.return.factors   273.26 410.22 278.27               374.13
Open                      1.09  52.69  11.32                53.56
Close                    18.46  54.42  11.34                58.94
High                      6.61  49.84  10.62                52.56
Low                       9.73  55.45  13.16                58.02
Volume                    7.12  52.78  30.81                59.14
ticker.sma.signals       -5.30   2.84   0.74                 0.66
ticker.bbands.signals    -2.03   0.51   3.18                 0.70
dn                       10.12  72.32  11.13                73.03
mavg                     -2.16  58.28  11.37                58.78
up                       -6.75  51.79  11.04                50.00
pctB                      5.56  32.47   9.87                34.08
mfi                      -3.58  25.59  17.96                27.64
Close.EMA.14             -1.93  38.43  13.69                39.24
ticker.rsi.signals        0.03   7.81  -3.68                 5.76
                        MeanDecreaseGini
ticker.multisma.signals             0.37
Close.SMA.20                       10.32
Close.SMA.50                       12.77
daily.returns                       9.52
ticker.return.factors             263.16
Open                                9.37
Close                              10.50
High                                9.34
Low                                10.38
Volume                             18.56
ticker.sma.signals                  0.96
ticker.bbands.signals               0.33
dn                                 14.75
mavg                               10.36
up                                 10.72
pctB                                9.56
mfi                                 9.51
Close.EMA.14                        9.14
ticker.rsi.signals                  0.19
Time difference of 60.15642 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 93.35607 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "BAC"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.35%
Confusion matrix:
     buy hold sell class.error
buy  151    0    2 0.013071895
hold   0  521    0 0.000000000
sell   1    0  174 0.005714286
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -4.71  -4.42  -3.16                -6.70
Close.SMA.20              6.32  65.98  17.07                68.29
Close.SMA.50             12.38  79.70  12.07                80.40
daily.returns             4.21  44.77 -16.43                31.27
ticker.return.factors   262.61 414.21 287.21               375.30
Open                      9.19  60.68  11.68                62.68
Close                    20.26  58.11  15.08                64.41
High                      7.00  59.03  13.07                61.00
Low                      15.44  59.88   6.48                62.48
Volume                   29.05  43.98  -8.70                43.85
ticker.sma.signals       -6.94  -1.12  -0.17                -4.09
ticker.bbands.signals     0.04  -1.28  -1.67                -1.97
dn                       17.17  71.50  11.36                73.53
mavg                      3.70  66.75  16.01                68.08
up                       -2.97  66.19  13.79                65.10
pctB                     -1.51  38.26   6.78                35.14
mfi                       1.65  29.98   3.88                25.51
Close.EMA.14              6.84  37.17   4.99                37.38
ticker.rsi.signals        2.84  11.16  -0.31                 9.77
                        MeanDecreaseGini
ticker.multisma.signals             0.40
Close.SMA.20                       13.50
Close.SMA.50                       18.19
daily.returns                      10.30
ticker.return.factors             286.78
Open                               11.64
Close                              12.17
High                               11.11
Low                                11.34
Volume                             14.35
ticker.sma.signals                  0.64
ticker.bbands.signals               0.07
dn                                 15.70
mavg                               13.76
up                                 13.32
pctB                               11.09
mfi                                 9.98
Close.EMA.14                       10.36
ticker.rsi.signals                  0.46
Time difference of 64.80241 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 66.96173 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "C"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.94%
Confusion matrix:
     buy hold sell class.error
buy  159    0    3  0.01851852
hold   0  521    0  0.00000000
sell   3    2  164  0.02958580
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.78  -3.72  -3.38                -5.17
Close.SMA.20             13.00  58.18  10.21                60.83
Close.SMA.50             13.85  66.15   2.09                65.83
daily.returns            -3.06  35.89 -19.33                19.76
ticker.return.factors   261.54 389.05 271.30               353.58
Open                     10.88  54.38   4.57                55.75
Close                    10.23  58.20  13.96                61.98
High                     10.30  54.41   7.84                56.62
Low                      13.27  59.96   3.59                60.80
Volume                    9.35  43.58 -11.99                34.00
ticker.sma.signals       -3.64   3.73  -1.41                 0.61
ticker.bbands.signals     0.29  -7.33   2.83                -4.81
dn                       27.55  64.62   6.55                68.00
mavg                     13.52  58.53   9.16                61.15
up                        9.45  64.22  17.59                67.06
pctB                     -0.56  36.01   0.39                30.10
mfi                      -9.45  22.95   7.72                16.87
Close.EMA.14              1.36  38.04   0.31                33.60
ticker.rsi.signals       -0.43   8.25  -4.79                 4.60
                        MeanDecreaseGini
ticker.multisma.signals             0.44
Close.SMA.20                       11.74
Close.SMA.50                       15.22
daily.returns                       9.61
ticker.return.factors             290.01
Open                               11.73
Close                              13.78
High                               11.99
Low                                13.27
Volume                             14.45
ticker.sma.signals                  0.69
ticker.bbands.signals               0.34
dn                                 16.43
mavg                               11.96
up                                 14.92
pctB                               10.62
mfi                                10.14
Close.EMA.14                       10.83
ticker.rsi.signals                  0.46
Time difference of 71.86021 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 105.8834 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","XOM","VLO","CVX","JNJ","PFE","AIQ","VLKAY")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "DB"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.58%
Confusion matrix:
     buy hold sell class.error
buy  164    1    1  0.01204819
hold   0  536    0  0.00000000
sell   3    0  162  0.01818182
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   3.31  -4.56  -2.22                -3.54
Close.SMA.20             13.62  54.31  22.59                59.43
Close.SMA.50             12.31  69.79  20.53                71.89
daily.returns           -16.01  28.84   1.12                13.37
ticker.return.factors   278.59 405.64 287.66               375.43
Open                     17.14  60.35  24.07                66.26
Close                    24.45  55.70  16.78                62.32
High                     13.18  58.35  19.20                62.67
Low                      27.09  62.52  18.18                68.08
Volume                   20.48  26.87  10.32                32.26
ticker.sma.signals       -3.96  -3.59  -3.15                -5.86
ticker.bbands.signals    -5.89   2.36  -5.72                -2.68
dn                       21.40  64.75  18.65                69.89
mavg                     13.54  54.47  20.56                59.58
up                        9.71  52.13  18.84                56.20
pctB                      5.05  37.81   2.72                35.58
mfi                       6.30  43.27  -0.39                38.60
Close.EMA.14             12.41  45.98   2.35                45.42
ticker.rsi.signals       12.85  17.35   2.56                20.85
                        MeanDecreaseGini
ticker.multisma.signals             0.30
Close.SMA.20                       10.64
Close.SMA.50                       14.32
daily.returns                       8.22
ticker.return.factors             299.83
Open                               13.49
Close                              12.41
High                               11.46
Low                                14.20
Volume                             14.56
ticker.sma.signals                  0.48
ticker.bbands.signals               0.56
dn                                 15.26
mavg                               10.49
up                                 10.98
pctB                               10.56
mfi                                11.31
Close.EMA.14                       11.70
ticker.rsi.signals                  1.15
Time difference of 89.50911 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 123.6312 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","XOM","VLO","CVX","JNJ","PFE","AIQ","VLKAY")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "VLKAY"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.45%
Confusion matrix:
     buy hold sell class.error
buy  143    0    3 0.020547945
hold   0  600    0 0.000000000
sell   1    0  142 0.006993007
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   3.54 -10.70  -1.26                -8.85
Close.SMA.20             13.22  55.13   8.75                58.49
Close.SMA.50             17.58  56.73   8.94                60.21
daily.returns            14.34  21.88  -1.69                22.37
ticker.return.factors   295.70 426.90 278.31               386.54
Open                     12.16  55.20  12.00                58.48
Close                    10.20  59.10  19.18                63.11
High                     15.65  56.28   8.78                59.74
Low                       7.46  55.41  19.21                58.99
Volume                   -1.05  40.52  18.19                40.13
ticker.sma.signals       10.44  -4.55   4.41                 3.52
ticker.bbands.signals    -0.36  14.21   0.52                11.80
dn                       10.95  48.82  12.33                51.79
mavg                     13.36  55.38   7.27                58.30
up                       21.18  62.46   8.56                66.94
pctB                     -3.44  40.19   9.95                37.26
mfi                       1.55  34.19  -8.99                23.24
Close.EMA.14             -2.09  46.26  16.89                45.98
ticker.rsi.signals        3.56  16.61  -0.95                16.02
                        MeanDecreaseGini
ticker.multisma.signals             0.29
Close.SMA.20                        9.09
Close.SMA.50                       11.01
daily.returns                       7.96
ticker.return.factors             286.76
Open                               10.87
Close                              11.77
High                               11.32
Low                                10.82
Volume                             11.46
ticker.sma.signals                  0.69
ticker.bbands.signals               1.34
dn                                  9.29
mavg                                9.08
up                                 12.89
pctB                               10.04
mfi                                 9.14
Close.EMA.14                       12.01
ticker.rsi.signals                  0.72
Time difference of 80.62498 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 115.3518 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "XOM"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 1.11%
Confusion matrix:
     buy hold sell class.error
buy   48    3    1  0.07692308
hold   0  798    0  0.00000000
sell   3    3   47  0.11320755
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   1.41  -1.76  -2.53                -2.17
Close.SMA.20              5.88  45.42  -1.80                46.04
Close.SMA.50              2.47  47.37  13.72                48.61
daily.returns            30.97  51.41 -15.36                51.24
ticker.return.factors   211.86 276.29 220.72               276.03
Open                     -0.18  43.16  -4.89                42.93
Close                     9.52  44.75  -0.61                45.48
High                      2.83  42.25  -2.54                42.35
Low                       4.83  42.23  -3.48                42.44
Volume                   11.19  45.38   2.42                42.79
ticker.sma.signals        0.66   2.64  -4.81                 1.23
ticker.bbands.signals     0.00   0.00   0.00                 0.00
dn                        8.81  46.09 -11.32                46.16
mavg                      7.18  45.06  -0.25                45.72
up                       -1.02  47.05  14.16                47.53
pctB                      9.99  36.33  -8.14                35.59
mfi                       1.83  39.49  -6.59                36.12
Close.EMA.14             17.89  39.31  -3.38                40.83
ticker.rsi.signals       -5.87  11.75   5.28                11.49
                        MeanDecreaseGini
ticker.multisma.signals             0.03
Close.SMA.20                        4.55
Close.SMA.50                        5.21
daily.returns                       6.92
ticker.return.factors             119.11
Open                                3.96
Close                               4.41
High                                3.92
Low                                 4.02
Volume                              8.73
ticker.sma.signals                  0.84
ticker.bbands.signals               0.00
dn                                  4.68
mavg                                4.55
up                                  5.29
pctB                                4.54
mfi                                 4.99
Close.EMA.14                        5.48
ticker.rsi.signals                  0.17
Time difference of 37.80361 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
In file(file, "rt") : unable to resolve 'ichart.finance.yahoo.com'
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 67.88286 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "XOM"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 1.11%
Confusion matrix:
     buy hold sell class.error
buy   48    3    1  0.07692308
hold   0  798    0  0.00000000
sell   3    3   47  0.11320755
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.00  -0.39  -1.41                -0.60
Close.SMA.20              7.36  44.62   2.45                45.46
Close.SMA.50              4.49  46.34  13.98                47.63
daily.returns            27.67  49.96 -16.24                49.40
ticker.return.factors   214.02 279.82 225.19               281.30
Open                      0.27  41.90  -4.32                41.69
Close                     9.36  43.17   0.07                44.01
High                      4.57  41.93  -4.12                41.98
Low                       5.14  40.87  -3.58                41.09
Volume                   10.90  45.23   0.18                42.64
ticker.sma.signals       -0.57   2.56  -8.06                -0.26
ticker.bbands.signals     0.00   1.00   0.00                 1.00
dn                        7.07  46.06  -9.76                46.07
mavg                      7.35  44.71   0.54                45.49
up                       -0.09  47.63  15.68                48.24
pctB                     11.37  35.62  -6.63                35.33
mfi                       3.63  38.19  -6.49                35.11
Close.EMA.14             16.28  38.66  -2.64                39.88
ticker.rsi.signals       -3.76  10.97   6.50                11.20
                        MeanDecreaseGini
ticker.multisma.signals             0.03
Close.SMA.20                        4.53
Close.SMA.50                        5.11
daily.returns                       6.85
ticker.return.factors             119.27
Open                                3.92
Close                               4.49
High                                3.81
Low                                 3.94
Volume                              8.88
ticker.sma.signals                  0.83
ticker.bbands.signals               0.00
dn                                  4.58
mavg                                4.53
up                                  5.23
pctB                                4.53
mfi                                 5.07
Close.EMA.14                        5.51
ticker.rsi.signals                  0.16
Time difference of 36.52675 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 68.31651 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","VLO","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "VLO"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.22%
Confusion matrix:
     buy hold sell class.error
buy  171    0    0  0.00000000
hold   0  580    0  0.00000000
sell   2    0  137  0.01438849
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.51  11.07  -3.87                 7.70
Close.SMA.20             14.48  56.48   9.50                58.94
Close.SMA.50             10.44  79.55  22.72                81.85
daily.returns            -4.76  32.45  -2.44                21.55
ticker.return.factors   304.54 406.34 272.91               377.30
Open                     11.02  53.41  17.06                56.59
Close                    17.61  52.83  10.98                56.27
High                      8.90  53.68  13.47                55.42
Low                      16.92  52.77   4.29                55.24
Volume                    9.32  22.61  17.38                28.81
ticker.sma.signals        0.74   2.65  -3.50                 1.25
ticker.bbands.signals     4.97   0.07  -1.14                 1.71
dn                       15.89  50.92   0.13                52.41
mavg                     14.43  58.29   9.70                60.36
up                       11.23  59.02  22.15                63.14
pctB                      2.09  40.89   3.33                37.27
mfi                      -5.57  35.38  12.35                31.55
Close.EMA.14             -2.26  47.01   3.60                42.13
ticker.rsi.signals       -1.49   9.23  -2.64                 5.89
                        MeanDecreaseGini
ticker.multisma.signals             0.68
Close.SMA.20                        9.58
Close.SMA.50                       14.95
daily.returns                       7.64
ticker.return.factors             300.42
Open                               10.25
Close                              10.01
High                                9.51
Low                                10.19
Volume                             16.51
ticker.sma.signals                  0.76
ticker.bbands.signals               0.30
dn                                 12.38
mavg                                9.86
up                                 12.14
pctB                               10.27
mfi                                11.05
Close.EMA.14                       10.13
ticker.rsi.signals                  0.44
Time difference of 63.87879 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 95.4344 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "CVX"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.55%
Confusion matrix:
     buy hold sell class.error
buy   66    1    0  0.01492537
hold   0  765    0  0.00000000
sell   2    2   66  0.05714286
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.38  -8.75   0.32                -8.52
Close.SMA.20              7.65  38.90   5.78                40.33
Close.SMA.50             -1.23  37.71   0.72                37.46
daily.returns            20.60  39.86 -13.70                38.08
ticker.return.factors   235.46 337.96 250.16               326.26
Open                      1.98  35.98   1.57                36.57
Close                    13.50  37.90  -5.71                38.92
High                      4.75  37.01   1.94                37.82
Low                       2.61  43.20  -1.91                43.04
Volume                    5.78  49.85  10.28                45.22
ticker.sma.signals       -0.71   5.37   4.92                 6.17
ticker.bbands.signals     0.77  -1.98  -0.68                -1.72
dn                        7.32  49.22   3.03                50.01
mavg                      5.81  39.09   5.94                40.51
up                        1.94  40.82  -2.85                40.40
pctB                     13.00  35.70   1.15                36.72
mfi                      11.54  36.40   9.32                39.14
Close.EMA.14             27.47  41.21  12.84                47.29
ticker.rsi.signals        4.14   8.27  -5.90                 7.57
                        MeanDecreaseGini
ticker.multisma.signals             0.20
Close.SMA.20                        5.02
Close.SMA.50                        4.75
daily.returns                       6.10
ticker.return.factors             150.18
Open                                5.03
Close                               5.72
High                                4.85
Low                                 5.83
Volume                             14.76
ticker.sma.signals                  0.56
ticker.bbands.signals               0.05
dn                                  7.78
mavg                                5.09
up                                  6.93
pctB                                5.73
mfi                                 6.40
Close.EMA.14                        7.24
ticker.rsi.signals                  0.17
Time difference of 40.67151 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 73.11028 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","JNJ","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "JNJ"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.88%
Confusion matrix:
     buy hold sell class.error
buy   19    3    2   0.2083333
hold   0  856    0   0.0000000
sell   1    2   26   0.1034483
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.00   1.00   0.00                 1.00
Close.SMA.20             -5.60  35.38  -4.40                35.10
Close.SMA.50             -6.99  40.92   8.91                41.31
daily.returns             6.90  18.68 -20.10                 9.34
ticker.return.factors   138.72 204.20 169.54               205.91
Open                      1.30  33.22  -5.65                33.08
Close                     6.93  34.61 -10.06                34.43
High                     -2.61  30.57  -6.34                30.12
Low                      -2.69  34.59  -5.64                34.10
Volume                   -0.74  10.40  13.04                13.96
ticker.sma.signals       -1.93   8.02  -6.18                 5.50
ticker.bbands.signals     1.99   7.40  -3.52                 6.23
dn                       -3.19  40.79   7.54                41.00
mavg                     -6.07  35.03  -0.05                34.98
up                       -7.91  38.22   1.97                38.03
pctB                      1.34  22.32   2.93                22.53
mfi                      -2.14  23.41  -6.76                18.89
Close.EMA.14              5.46  24.77  13.92                28.28
ticker.rsi.signals       -4.96   6.94  -3.01                 4.16
                        MeanDecreaseGini
ticker.multisma.signals             0.00
Close.SMA.20                        2.38
Close.SMA.50                        2.87
daily.returns                       4.30
ticker.return.factors              54.87
Open                                3.10
Close                               3.17
High                                2.62
Low                                 3.33
Volume                              6.50
ticker.sma.signals                  0.20
ticker.bbands.signals               0.09
dn                                  2.90
mavg                                2.37
up                                  3.02
pctB                                3.05
mfi                                 2.52
Close.EMA.14                        3.63
ticker.rsi.signals                  0.24
Time difference of 26.63581 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 28.78042 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "PFE"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.99%
Confusion matrix:
     buy hold sell class.error
buy   61    3    3  0.08955224
hold   0  778    0  0.00000000
sell   0    3   61  0.04687500
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   3.43  -2.18  -0.05                -1.30
Close.SMA.20              5.46  48.60   1.21                49.01
Close.SMA.50              4.25  50.57   5.22                51.27
daily.returns             4.44  37.32 -12.84                27.85
ticker.return.factors   261.29 368.29 233.60               340.75
Open                     17.69  46.73   2.81                48.12
Close                    17.79  51.47  -2.96                52.30
High                     14.59  47.25   2.22                48.48
Low                      15.25  54.90   1.48                55.83
Volume                  -16.03  31.78   4.14                19.91
ticker.sma.signals       -2.78   5.95  -1.48                 3.84
ticker.bbands.signals    -1.73  -0.14   0.00                -0.36
dn                        6.03  52.03   2.64                52.61
mavg                      5.57  47.58  -0.13                47.79
up                        5.68  47.11   8.19                48.13
pctB                     -3.80  30.42  -1.42                28.55
mfi                      -5.81  41.22   2.20                36.59
Close.EMA.14              1.05  40.68   0.72                39.57
ticker.rsi.signals        2.09  19.06   6.62                20.09
                        MeanDecreaseGini
ticker.multisma.signals             0.08
Close.SMA.20                        4.81
Close.SMA.50                        6.09
daily.returns                       6.07
ticker.return.factors             149.63
Open                                5.46
Close                               5.76
High                                5.56
Low                                 6.02
Volume                              9.01
ticker.sma.signals                  0.44
ticker.bbands.signals               0.08
dn                                  6.85
mavg                                4.74
up                                  5.48
pctB                                5.56
mfi                                 5.15
Close.EMA.14                        6.15
ticker.rsi.signals                  0.51
Time difference of 41.64017 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 44.1744 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","PFE","AIQ")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "AIQ"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.33%
Confusion matrix:
     buy hold sell class.error
buy  149    0    2 0.013245033
hold   0  584    1 0.001709402
sell   0    0  160 0.000000000
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   2.17  -0.92  12.63                 5.78
Close.SMA.20             10.87  55.81  13.84                59.13
Close.SMA.50             13.78  55.03  12.86                58.73
daily.returns            -9.53  23.16  -6.86                 8.73
ticker.return.factors   304.31 462.11 305.04               408.93
Open                     17.04  49.66   4.48                52.82
Close                    16.82  53.47   7.56                56.71
High                     17.45  47.71   5.33                50.86
Low                      18.60  52.93   8.94                56.86
Volume                    3.38  34.45  -4.18                25.57
ticker.sma.signals       -1.64  -0.78  -1.38                -2.10
ticker.bbands.signals    -2.16  -5.51  -2.88                -6.62
dn                       22.98  61.19   1.56                63.76
mavg                     13.29  54.51  13.59                58.07
up                        8.96  53.21  15.62                57.13
pctB                      0.98  43.62  -1.43                37.99
mfi                      10.02  38.48   0.42                35.94
Close.EMA.14             11.62  52.91  -6.32                49.32
ticker.rsi.signals        3.54  17.47  -2.69                15.72
                        MeanDecreaseGini
ticker.multisma.signals             0.63
Close.SMA.20                        9.68
Close.SMA.50                       11.38
daily.returns                       8.03
ticker.return.factors             318.78
Open                                8.20
Close                               8.46
High                                8.02
Low                                 9.06
Volume                             11.57
ticker.sma.signals                  1.06
ticker.bbands.signals               0.20
dn                                 11.76
mavg                                9.61
up                                 10.01
pctB                               10.32
mfi                                10.38
Close.EMA.14                       11.27
ticker.rsi.signals                  0.89
Time difference of 64.31077 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 377

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 98.03835 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","PFE","GE")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "GE"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.33%
Confusion matrix:
     buy hold sell class.error
buy  105    1    2  0.02777778
hold   0  679    0  0.00000000
sell   0    0  112  0.00000000
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -2.19   4.24  -2.58                 2.29
Close.SMA.20             -1.05  58.42  14.26                59.86
Close.SMA.50             12.94  62.07  -1.40                62.75
daily.returns            13.46  46.53  -4.96                42.52
ticker.return.factors   265.08 393.53 278.15               366.74
Open                      5.48  58.48  15.98                60.57
Close                     6.60  53.93  19.67                57.34
High                      0.21  54.75  14.17                56.25
Low                      11.59  59.93  14.66                62.30
Volume                   -1.98  43.90   7.62                37.84
ticker.sma.signals      -10.83  12.35  -9.53                 1.57
ticker.bbands.signals    -3.58  -0.76  -1.40                -2.55
dn                       10.93  65.66  10.00                66.66
mavg                     -1.96  57.35  12.34                58.33
up                       -4.75  64.76  21.70                66.27
pctB                      1.07  40.61   1.93                38.98
mfi                       1.15  37.86   6.19                37.59
Close.EMA.14              7.49  45.13  -1.85                44.34
ticker.rsi.signals        2.78  13.74  -1.85                12.68
                        MeanDecreaseGini
ticker.multisma.signals             0.32
Close.SMA.20                        8.04
Close.SMA.50                        9.69
daily.returns                       8.60
ticker.return.factors             226.79
Open                                9.15
Close                               8.79
High                                8.23
Low                                 9.67
Volume                             14.14
ticker.sma.signals                  1.48
ticker.bbands.signals               0.24
dn                                 10.62
mavg                                8.03
up                                  9.03
pctB                                8.05
mfi                                 8.83
Close.EMA.14                        8.50
ticker.rsi.signals                  0.56
Time difference of 55.0936 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 57.09604 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","PFE","GE")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "BAC"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.35%
Confusion matrix:
     buy hold sell class.error
buy  151    0    2 0.013071895
hold   0  521    0 0.000000000
sell   1    0  174 0.005714286
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -2.31  -4.38  -3.24                -5.79
Close.SMA.20              4.77  67.01  15.71                68.14
Close.SMA.50             13.24  79.68  12.21                80.68
daily.returns             6.20  45.46 -17.17                32.12
ticker.return.factors   268.08 421.41 289.23               383.16
Open                     10.24  60.06  10.83                61.99
Close                    16.74  59.93  15.59                64.69
High                     10.45  59.25  12.72                62.06
Low                      14.85  58.99   8.95                62.05
Volume                   31.07  44.31  -8.19                44.94
ticker.sma.signals       -6.81   0.54  -0.62                -3.17
ticker.bbands.signals     2.13  -1.31  -3.52                -2.41
dn                       15.25  70.01   8.68                71.63
mavg                      3.32  66.70  15.60                68.35
up                       -3.22  67.34  14.57                65.98
pctB                     -3.34  36.87   5.72                33.23
mfi                       0.36  29.89   6.18                26.11
Close.EMA.14              5.58  38.21   7.04                37.91
ticker.rsi.signals        2.45  10.92   2.22                10.53
                        MeanDecreaseGini
ticker.multisma.signals             0.37
Close.SMA.20                       13.54
Close.SMA.50                       18.14
daily.returns                      10.33
ticker.return.factors             287.39
Open                               11.60
Close                              12.15
High                               11.23
Low                                11.24
Volume                             14.14
ticker.sma.signals                  0.62
ticker.bbands.signals               0.06
dn                                 15.46
mavg                               13.59
up                                 13.38
pctB                               10.99
mfi                                10.05
Close.EMA.14                       10.27
ticker.rsi.signals                  0.42
Time difference of 63.72626 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 65.9132 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","CVX","PFE","GE")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "MS"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.23%
Confusion matrix:
     buy hold sell class.error
buy  164    1    0 0.006060606
hold   0  544    0 0.000000000
sell   1    0  155 0.006410256
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -4.45   1.71   0.31                 0.29
Close.SMA.20             13.48  58.58  15.24                60.66
Close.SMA.50             -5.39  67.16  18.08                66.73
daily.returns            -6.56  23.54 -12.47                 9.10
ticker.return.factors   280.68 408.21 277.25               375.26
Open                      7.97  51.87  18.01                55.28
Close                     6.30  51.58  18.82                53.96
High                     -0.56  51.23  16.06                52.51
Low                      17.36  53.55  13.35                56.70
Volume                   19.33  33.20  20.63                41.87
ticker.sma.signals       -7.62   9.66   3.10                 5.66
ticker.bbands.signals     1.97  -4.51  -1.00                -4.00
dn                       17.77  66.51  25.36                72.36
mavg                     14.28  58.30  14.33                60.96
up                        6.81  59.20  15.53                61.04
pctB                      5.35  37.30   4.30                36.24
mfi                     -10.75  34.29  12.84                28.51
Close.EMA.14              6.56  38.89   4.42                37.34
ticker.rsi.signals       -0.86   0.90   2.99                 1.76
                        MeanDecreaseGini
ticker.multisma.signals             0.21
Close.SMA.20                       13.14
Close.SMA.50                       14.10
daily.returns                       7.99
ticker.return.factors             284.77
Open                               12.46
Close                              10.73
High                               10.46
Low                                12.71
Volume                             17.49
ticker.sma.signals                  1.62
ticker.bbands.signals               0.10
dn                                 18.40
mavg                               13.10
up                                 12.59
pctB                               10.45
mfi                                11.75
Close.EMA.14                       10.66
ticker.rsi.signals                  0.08
Time difference of 63.35618 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 96.13568 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "INFY"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.67%
Confusion matrix:
     buy hold sell class.error
buy  106    3    1  0.03636364
hold   0  682    0  0.00000000
sell   1    1  107  0.01834862
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.61  -5.08   4.49                -4.06
Close.SMA.20              9.76  51.13   7.73                52.77
Close.SMA.50              7.09  56.41   4.06                57.04
daily.returns             3.72  14.88   2.02                13.75
ticker.return.factors   272.28 376.84 276.79               363.90
Open                     11.90  51.32  13.38                53.64
Close                    14.95  53.93  11.95                56.59
High                     11.72  52.30  15.19                55.25
Low                      18.56  57.11  14.32                60.04
Volume                    3.00  31.53  12.62                30.81
ticker.sma.signals       -4.12  -4.97   2.88                -4.86
ticker.bbands.signals     1.30   0.34  -1.99                -0.03
dn                       14.25  48.84   5.65                51.36
mavg                      8.61  50.70   8.90                52.19
up                        4.26  48.85  15.02                51.25
pctB                      2.78  34.27   4.42                32.98
mfi                      12.62  42.48   8.95                45.23
Close.EMA.14             10.43  48.55  -1.89                46.16
ticker.rsi.signals        6.03  11.04   4.25                13.06
                        MeanDecreaseGini
ticker.multisma.signals             0.27
Close.SMA.20                        7.82
Close.SMA.50                        8.60
daily.returns                       6.80
ticker.return.factors             224.39
Open                               11.03
Close                              11.33
High                               11.20
Low                                12.59
Volume                              9.55
ticker.sma.signals                  0.90
ticker.bbands.signals               0.03
dn                                  9.50
mavg                                7.73
up                                  8.65
pctB                                8.27
mfi                                 9.57
Close.EMA.14                        9.00
ticker.rsi.signals                  0.51
Time difference of 57.85519 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 384

Error in auto.arima(x) : No suitable ARIMA model found
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 92.01953 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "BRK.A"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.44%
Confusion matrix:
     buy hold sell class.error
buy   71    3    0  0.04054054
hold   0  768    0  0.00000000
sell   1    0   62  0.01587302
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.62   0.53   4.06                 1.54
Close.SMA.20              6.35  46.23   9.05                47.48
Close.SMA.50              5.49  53.99   0.65                54.71
daily.returns             5.16  26.59  -8.90                19.76
ticker.return.factors   248.18 312.88 220.90               308.01
Open                      6.13  45.52   8.68                46.48
Close                    17.90  42.13   6.51                44.46
High                      3.20  41.70  10.21                42.76
Low                       9.36  49.71  16.71                51.69
Volume                   12.10  41.37  16.46                44.00
ticker.sma.signals       -6.55  -1.60  -6.85                -5.34
ticker.bbands.signals     1.42  -6.51  -2.37                -6.00
dn                       17.42  55.49   1.85                56.85
mavg                      4.87  46.00  11.38                47.28
up                       -7.63  52.57   7.03                52.17
pctB                      0.96  31.95  -8.81                26.81
mfi                       2.84  35.58  -4.29                32.04
Close.EMA.14             -0.34  38.00  -3.91                34.01
ticker.rsi.signals       -1.26   5.27  -0.43                 4.40
                        MeanDecreaseGini
ticker.multisma.signals             0.17
Close.SMA.20                        6.56
Close.SMA.50                        8.01
daily.returns                       4.85
ticker.return.factors             147.55
Open                                6.21
Close                               6.64
High                                5.83
Low                                 7.12
Volume                              9.05
ticker.sma.signals                  0.55
ticker.bbands.signals               0.11
dn                                  9.04
mavg                                6.56
up                                  7.81
pctB                                4.89
mfi                                 5.72
Close.EMA.14                        5.52
ticker.rsi.signals                  0.25
Time difference of 42.95916 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 51.94923 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> #listOfCompanies <- c("AAPL","IBM","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> #for(counter in 1:10)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> 
> 
> now1 <- Sys.time()
> 
> tickerSymbol <- "AMZN"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.56%
Confusion matrix:
     buy hold sell class.error
buy  132    1    1  0.01492537
hold   0  644    0  0.00000000
sell   2    1  116  0.02521008
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.49  26.73  12.63                25.93
Close.SMA.20              3.41  51.40   7.15                52.64
Close.SMA.50             25.83  46.94   0.00                51.16
daily.returns             5.68  19.18 -12.02                11.28
ticker.return.factors   300.88 444.57 277.07               400.47
Open                     13.45  50.40   7.81                53.32
Close                    15.78  49.05   6.09                52.55
High                     19.73  52.36   2.61                55.79
Low                      15.63  53.30   5.23                55.82
Volume                   -0.22  29.53  -0.02                22.61
ticker.sma.signals        1.01  -0.76   3.15                 0.87
ticker.bbands.signals     3.40  -4.28  -3.51                -4.08
dn                        0.07  50.58   9.18                50.69
mavg                      3.85  51.13   9.54                52.55
up                       13.08  50.67   4.97                53.45
pctB                     -8.25  36.11   3.13                32.16
mfi                      -6.03  34.98  -2.23                26.38
Close.EMA.14             -7.98  35.31   1.97                29.97
ticker.rsi.signals       -3.01   4.18   0.16                 2.61
                        MeanDecreaseGini
ticker.multisma.signals             1.52
Close.SMA.20                        9.07
Close.SMA.50                       10.16
daily.returns                       6.73
ticker.return.factors             258.06
Open                               10.91
Close                              11.87
High                               11.06
Low                                11.64
Volume                             10.32
ticker.sma.signals                  1.02
ticker.bbands.signals               0.27
dn                                  9.05
mavg                                8.94
up                                 10.09
pctB                                8.90
mfi                                 9.67
Close.EMA.14                        8.82
ticker.rsi.signals                  0.26
Time difference of 61.63831 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 94.84249 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> dir.create("csvfolder")
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> x <- 10
> dir.create("csvfolder")
Warning message:
In dir.create("csvfolder") : 'csvfolder' already exists
> pt <- file.path("csvfolder", "example.csv")
> writeToCsv(x, pt)
> 
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> x <- data.frame(10)
> dir.create("csvfolder")
Warning message:
In dir.create("csvfolder") : 'csvfolder' already exists
> pt <- file.path("csvfolder", "example.csv")
> writeToCsv(x, pt)
> 
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> x <- data.frame(10)
> dir.create("csvfolder")
> pt <- file.path("csvfolder", "example.csv")
> writeToCsv(x, pt)
> 
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> x <- data.frame(10)
> dir.create("csvfolder")
Warning message:
In dir.create("csvfolder") : 'csvfolder' already exists
> pt <- file.path("csvfolder", "example.csv")
> writeToCsv(csvData, pt)
> 
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> x <- data.frame(10)
> unlink("csvfolder")
> dir.create("csvfolder")
Warning message:
In dir.create("csvfolder") : 'csvfolder' already exists
> pt <- file.path("csvfolder", "example.csv")
> writeToCsv(csvData, pt)
> 
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkyaingale
> ###############################################################################
> 
> 
> #listOfCompanies <- c("AAPL","MSFT","INTC","JPM","WFC","BAC","C","XOM","VLO","CVX","JNJ","PFE","AIQ")
> 
> x <- data.frame(10)
> unlink("csvfolder", recursive = TRUE, force = TRUE)
> dir.create("csvfolder")
> pt <- file.path("csvfolder", "example.csv")
> writeToCsv(csvData, pt)
> 
> 
> 
> for(i in 1:10)
+ {
+ 	#symbol <- listOfCompanies[i]
+ 	#tickerOHLC <- getYahooData(tickerSymbol, trainStartDate, trainEndDate ,freq="daily", type="price", adjust=TRUE, quiet=FALSE)	
+ }
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> dirName <- "9Dec2013"
> listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> for(counter in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]["dirName"]))
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ now1 <- Sys.time()
+ 
+ 
+ #tickerSymbol <- "AMZN"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ 
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.26  -4.44   0.68                -4.02
Close.SMA.20              5.96  46.39  -2.04                46.65
Close.SMA.50              0.77  50.99  -2.88                50.28
daily.returns             0.46  26.03 -18.91                14.85
ticker.return.factors   282.04 377.10 232.80               354.08
Open                      4.26  50.69   3.04                51.22
Close                     4.24  52.47  -1.07                52.29
High                      2.82  49.06   1.44                49.18
Low                       2.16  51.51   6.23                51.90
Volume                  -11.63  41.74  20.72                37.08
ticker.sma.signals       -5.02  -1.95  -1.89                -4.48
ticker.bbands.signals    -1.40   0.59  -3.20                -1.04
dn                        3.91  45.62   3.43                46.36
mavg                      4.51  46.50  -1.97                46.43
up                        1.34  48.34   0.83                48.15
pctB                      5.29  38.39  -0.08                37.78
mfi                      -1.68  39.93  17.28                41.24
Close.EMA.14             12.63  39.72  11.21                43.45
ticker.rsi.signals        5.49  12.13  -1.00                12.41
                        MeanDecreaseGini
ticker.multisma.signals             0.16
Close.SMA.20                        7.01
Close.SMA.50                        7.39
daily.returns                       5.43
ticker.return.factors             195.95
Open                               10.39
Close                              10.50
High                                8.94
Low                                10.70
Volume                             14.65
ticker.sma.signals                  0.39
ticker.bbands.signals               0.30
dn                                  8.82
mavg                                6.85
up                                  7.36
pctB                                8.50
mfi                                 9.66
Close.EMA.14                       10.18
ticker.rsi.signals                  0.55
Time difference of 169.8723 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"]["dirName"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: In file(file, ifelse(append, "a", "w")) :
  cannot open file '9Dec2013/AAPL.csv': No such file or directory
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> dirName <- "9Dec2013"
> dir.create("dirName")
> 
> listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> for(counter in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]["dirName"]))
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ now1 <- Sys.time()
+ 
+ 
+ #tickerSymbol <- "AMZN"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ 
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.43  -2.48   1.01                -2.29
Close.SMA.20              6.19  45.91  -2.92                45.97
Close.SMA.50              1.39  51.38  -2.91                50.52
daily.returns             1.45  26.07 -17.71                16.23
ticker.return.factors   285.29 383.10 235.80               360.03
Open                      3.52  50.97   4.05                51.69
Close                     4.45  52.79   0.87                52.87
High                      4.71  48.80   1.70                49.07
Low                       1.80  51.80   5.86                52.12
Volume                  -13.05  41.59  21.82                37.30
ticker.sma.signals       -2.16  -0.94  -3.37                -2.97
ticker.bbands.signals    -2.41  -0.97  -3.11                -2.65
dn                        2.63  44.48   3.42                44.53
mavg                      5.16  45.83  -3.38                46.03
up                        1.04  48.29   2.67                47.82
pctB                      5.46  39.41  -0.39                38.94
mfi                      -4.71  41.05  18.61                41.87
Close.EMA.14             13.14  41.01  13.62                45.15
ticker.rsi.signals        2.34  11.86   1.25                11.67
                        MeanDecreaseGini
ticker.multisma.signals             0.16
Close.SMA.20                        6.91
Close.SMA.50                        7.37
daily.returns                       5.44
ticker.return.factors             196.59
Open                               10.24
Close                              10.53
High                                8.79
Low                                10.56
Volume                             14.60
ticker.sma.signals                  0.39
ticker.bbands.signals               0.33
dn                                  8.61
mavg                                6.99
up                                  7.45
pctB                                8.53
mfi                                 9.50
Close.EMA.14                       10.22
ticker.rsi.signals                  0.53
Time difference of 51.88077 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"]["dirName"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: In file(file, ifelse(append, "a", "w")) :
  cannot open file '9Dec2013/AAPL.csv': No such file or directory
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> dirName <- "9Dec2013"
> dir.create(dirName)
> unlink(dirName, recursive = TRUE, force = TRUE)
> 
> 
> listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> for(counter in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]["dirName"]))
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ now1 <- Sys.time()
+ 
+ 
+ #tickerSymbol <- "AMZN"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ 
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.29  -1.09   1.51                -0.58
Close.SMA.20              5.44  46.16  -2.84                46.07
Close.SMA.50              2.12  50.26  -3.14                49.68
daily.returns            -1.03  25.00 -21.03                12.17
ticker.return.factors   285.01 383.33 236.18               361.11
Open                      5.98  50.48   3.45                51.23
Close                     6.71  52.25  -3.17                52.21
High                      2.56  48.50   1.32                48.58
Low                       1.29  51.97   6.41                52.23
Volume                  -14.26  40.66  22.03                36.09
ticker.sma.signals       -5.01  -2.27  -1.74                -4.87
ticker.bbands.signals    -3.78  -1.29  -1.92                -2.93
dn                        2.83  44.79   5.01                45.58
mavg                      5.61  46.06  -4.96                45.73
up                        0.72  46.78   0.89                46.21
pctB                      6.70  38.38   0.22                38.41
mfi                      -3.65  39.22  18.79                40.55
Close.EMA.14             14.10  40.53  11.02                44.49
ticker.rsi.signals        4.62  12.71  -1.41                12.47
                        MeanDecreaseGini
ticker.multisma.signals             0.17
Close.SMA.20                        7.01
Close.SMA.50                        7.37
daily.returns                       5.43
ticker.return.factors             196.44
Open                               10.21
Close                              10.62
High                                8.85
Low                                10.76
Volume                             14.57
ticker.sma.signals                  0.39
ticker.bbands.signals               0.31
dn                                  8.71
mavg                                6.93
up                                  7.29
pctB                                8.38
mfi                                 9.61
Close.EMA.14                       10.19
ticker.rsi.signals                  0.55
Time difference of 54.64808 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"]["dirName"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: In file(file, ifelse(append, "a", "w")) :
  cannot open file '9Dec2013/AAPL.csv': No such file or directory
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> dirName <- "9Dec2013"
> dir.create(dirName)
> unlink(dirName, recursive = TRUE, force = TRUE)
> 
> 
> listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> for(counter in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]["dirName"]))
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ now1 <- Sys.time()
+ 
+ 
+ #tickerSymbol <- "AMZN"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ 
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.77%
Confusion matrix:
     buy hold sell class.error
buy  102    3    1  0.03773585
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.22  -2.91   0.68                -2.65
Close.SMA.20              6.32  46.55  -3.14                46.51
Close.SMA.50              2.80  50.71  -2.80                50.08
daily.returns            -0.44  27.12 -19.65                15.21
ticker.return.factors   283.31 378.65 235.66               358.30
Open                      2.42  50.75   4.20                51.08
Close                     5.23  52.54  -1.23                52.50
High                      2.21  49.32   2.14                49.45
Low                       0.66  52.06   6.20                52.32
Volume                  -12.42  41.06  22.75                37.89
ticker.sma.signals       -3.95  -0.44  -3.97                -3.26
ticker.bbands.signals    -2.86   0.27  -3.82                -2.00
dn                        3.72  46.15   2.40                46.33
mavg                      3.30  46.56  -1.86                46.53
up                        1.07  49.18  -0.49                48.53
pctB                      3.24  40.08  -3.03                38.35
mfi                      -1.71  38.97  17.65                40.64
Close.EMA.14             15.76  41.89  11.55                46.45
ticker.rsi.signals        3.39  13.00   1.24                12.93
                        MeanDecreaseGini
ticker.multisma.signals             0.16
Close.SMA.20                        7.08
Close.SMA.50                        7.38
daily.returns                       5.52
ticker.return.factors             195.08
Open                               10.49
Close                              10.79
High                                9.03
Low                                10.66
Volume                             15.06
ticker.sma.signals                  0.39
ticker.bbands.signals               0.31
dn                                  8.63
mavg                                7.07
up                                  7.47
pctB                                8.54
mfi                                 9.49
Close.EMA.14                       10.30
ticker.rsi.signals                  0.54
Time difference of 52.59134 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"]["dirName"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: In file(file, ifelse(append, "a", "w")) :
  cannot open file '//9Dec2013/AAPL.csv': No such file or directory
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> 
> 
> listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","PFE","GE")
> 
> for(counter in 1:10)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
+ setwd("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/data")
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ now1 <- Sys.time()
+ 
+ 
+ #tickerSymbol <- "AMZN"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ 
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.66%
Confusion matrix:
     buy hold sell class.error
buy  103    2    1  0.02830189
hold   0  714    0  0.00000000
sell   1    2   84  0.03448276
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.50  -2.60  -0.18                -2.40
Close.SMA.20              7.08  45.38  -2.98                45.52
Close.SMA.50              0.82  49.75  -3.61                48.86
daily.returns             0.94  25.38 -19.53                14.19
ticker.return.factors   281.42 380.71 233.79               357.17
Open                      4.13  50.10   4.91                50.88
Close                     7.26  52.21  -0.81                52.29
High                      3.70  48.06   1.59                48.32
Low                       2.52  51.74   5.75                52.12
Volume                  -11.07  40.85  22.49                38.08
ticker.sma.signals       -5.64   0.45  -1.05                -2.47
ticker.bbands.signals    -0.67  -1.80  -2.25                -2.59
dn                        4.03  45.75   3.07                46.30
mavg                      7.49  45.77  -2.93                46.04
up                        0.58  47.53   1.59                47.27
pctB                      6.52  39.23  -2.14                38.57
mfi                      -3.76  40.60  18.50                41.75
Close.EMA.14             13.87  39.58  12.34                43.97
ticker.rsi.signals        3.84  12.98  -1.02                12.43
                        MeanDecreaseGini
ticker.multisma.signals             0.16
Close.SMA.20                        6.95
Close.SMA.50                        7.43
daily.returns                       5.46
ticker.return.factors             196.08
Open                               10.31
Close                              10.75
High                                8.79
Low                                10.53
Volume                             14.73
ticker.sma.signals                  0.41
ticker.bbands.signals               0.31
dn                                  8.75
mavg                                7.03
up                                  7.35
pctB                                8.37
mfi                                 9.57
Close.EMA.14                       10.29
ticker.rsi.signals                  0.55
Time difference of 63.14903 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 97.03841 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.99%
Confusion matrix:
     buy hold sell class.error
buy   50    4    2  0.10714286
hold   0  795    0  0.00000000
sell   1    2   55  0.05172414
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -7.77  -1.27  -1.01                -3.81
Close.SMA.20              4.41  45.60  -4.07                45.40
Close.SMA.50             -0.64  45.76  -9.55                43.88
daily.returns            -4.61  20.71 -17.30                 7.18
ticker.return.factors   204.68 290.92 208.48               285.58
Open                      8.86  43.72   0.27                44.41
Close                    12.74  46.26  -0.49                47.22
High                      4.77  47.92   2.39                48.44
Low                       6.09  49.47   1.73                49.93
Volume                   -2.38  45.99  -2.49                40.03
ticker.sma.signals        8.05   7.49  -4.68                 7.97
ticker.bbands.signals     1.99   7.14  -2.61                 6.65
dn                        1.78  39.67   2.39                39.90
mavg                      3.68  46.34  -2.80                46.26
up                       -5.54  39.45   4.45                39.28
pctB                      7.20  26.98  -3.82                25.65
mfi                      -6.94  32.13  -7.02                21.80
Close.EMA.14              3.13  42.07   4.05                40.88
ticker.rsi.signals       -6.70   8.57  -0.92                 6.53
                        MeanDecreaseGini
ticker.multisma.signals             0.50
Close.SMA.20                        5.27
Close.SMA.50                        5.56
daily.returns                       3.10
ticker.return.factors             116.03
Open                                6.74
Close                               8.72
High                                8.00
Low                                 8.30
Volume                              7.32
ticker.sma.signals                  0.20
ticker.bbands.signals               0.13
dn                                  6.13
mavg                                5.20
up                                  5.27
pctB                                5.79
mfi                                 6.20
Close.EMA.14                        7.77
ticker.rsi.signals                  0.22
Time difference of 39.55263 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 74.97489 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.56%
Confusion matrix:
     buy hold sell class.error
buy  132    1    1  0.01492537
hold   0  644    0  0.00000000
sell   2    1  116  0.02521008
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.02  24.84   8.54                22.89
Close.SMA.20              4.73  51.80   8.01                53.07
Close.SMA.50             25.80  46.25  -1.43                50.19
daily.returns             5.44  20.89  -8.18                13.94
ticker.return.factors   299.15 439.96 273.31               395.52
Open                     11.53  49.89   9.79                52.91
Close                    17.48  50.94   3.84                54.00
High                     19.71  53.37   0.37                56.13
Low                      12.85  52.41   4.99                54.54
Volume                    0.29  30.67  -1.88                23.22
ticker.sma.signals        3.50  -0.27   2.61                 2.19
ticker.bbands.signals     3.50  -4.36  -3.86                -4.16
dn                        0.67  51.33   9.56                51.88
mavg                      5.06  51.91   8.58                53.23
up                       12.32  51.20   4.23                53.21
pctB                     -7.62  36.18   2.15                32.31
mfi                      -4.09  34.27  -2.56                26.42
Close.EMA.14             -4.97  36.69   1.79                33.18
ticker.rsi.signals       -4.29   3.88   1.25                 2.12
                        MeanDecreaseGini
ticker.multisma.signals             1.46
Close.SMA.20                        9.09
Close.SMA.50                       10.06
daily.returns                       6.76
ticker.return.factors             257.02
Open                               10.86
Close                              12.09
High                               11.43
Low                                11.55
Volume                             10.38
ticker.sma.signals                  1.02
ticker.bbands.signals               0.28
dn                                  9.00
mavg                                9.14
up                                 10.23
pctB                                9.05
mfi                                 9.81
Close.EMA.14                        8.84
ticker.rsi.signals                  0.27
Time difference of 65.38739 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 101.0613 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.77%
Confusion matrix:
     buy hold sell class.error
buy   61    1    3  0.06153846
hold   0  762    0  0.00000000
sell   1    2   74  0.03896104
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.36   1.53   4.05                 2.53
Close.SMA.20              2.14  45.55  -1.51                45.67
Close.SMA.50              3.10  49.23  -2.76                49.22
daily.returns             7.97  26.07 -16.84                17.45
ticker.return.factors   219.84 326.14 242.42               313.23
Open                      1.77  47.23   3.71                47.90
Close                    11.81  51.43  -2.21                52.14
High                      5.13  47.02   0.52                47.59
Low                       6.45  50.25   5.70                51.36
Volume                    6.16  53.43  23.51                56.34
ticker.sma.signals       -3.45  -2.49  -5.21                -5.45
ticker.bbands.signals    -3.73   8.45  -0.79                 7.01
dn                       10.81  44.60  -2.29                45.47
mavg                      3.04  45.78  -1.63                45.94
up                       -1.86  46.58  -4.10                45.79
pctB                     -5.76  37.08  -3.44                33.99
mfi                      -7.98  39.52   3.09                36.00
Close.EMA.14             -5.34  39.92  -7.51                36.20
ticker.rsi.signals       -3.08  13.53  -2.01                11.11
                        MeanDecreaseGini
ticker.multisma.signals             0.58
Close.SMA.20                        6.14
Close.SMA.50                        6.38
daily.returns                       5.19
ticker.return.factors             147.66
Open                                7.05
Close                               8.36
High                                7.04
Low                                 7.91
Volume                             13.78
ticker.sma.signals                  0.25
ticker.bbands.signals               0.40
dn                                  7.65
mavg                                6.07
up                                  6.62
pctB                                5.98
mfi                                 6.96
Close.EMA.14                        5.94
ticker.rsi.signals                  0.34
Time difference of 54.57828 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 386
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 88.9796 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.94%
Confusion matrix:
     buy hold sell class.error
buy  159    0    3  0.01851852
hold   0  521    0  0.00000000
sell   3    2  164  0.02958580
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.64  -2.40  -3.15                -3.89
Close.SMA.20             11.85  58.87  10.23                62.04
Close.SMA.50             11.98  67.58   4.05                66.85
daily.returns            -2.20  37.45 -18.89                21.07
ticker.return.factors   259.70 388.59 269.45               352.78
Open                     12.29  55.73   4.84                57.36
Close                    10.59  58.06  13.93                61.87
High                     11.77  55.40   8.86                58.15
Low                      14.42  59.83   4.68                61.91
Volume                   11.39  44.54 -10.48                36.51
ticker.sma.signals       -3.95   4.43  -0.92                 0.71
ticker.bbands.signals     0.73  -7.30   2.00                -5.04
dn                       25.74  67.38   8.65                70.97
mavg                     11.46  58.78   7.53                60.79
up                        8.64  64.33  15.93                66.63
pctB                      0.46  35.15   0.04                30.02
mfi                      -8.06  24.16   6.98                18.52
Close.EMA.14              3.35  38.37   1.18                34.67
ticker.rsi.signals       -1.54   8.00  -5.01                 4.04
                        MeanDecreaseGini
ticker.multisma.signals             0.43
Close.SMA.20                       11.94
Close.SMA.50                       15.34
daily.returns                       9.73
ticker.return.factors             287.10
Open                               11.89
Close                              14.18
High                               12.23
Low                                13.49
Volume                             14.74
ticker.sma.signals                  0.66
ticker.bbands.signals               0.36
dn                                 16.69
mavg                               11.92
up                                 15.15
pctB                               10.80
mfi                                10.46
Close.EMA.14                       10.95
ticker.rsi.signals                  0.47
Time difference of 71.11631 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 107.2798 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.69%
Confusion matrix:
     buy hold sell class.error
buy  164    1    1  0.01204819
hold   0  536    0  0.00000000
sell   3    1  161  0.02424242
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   4.90  -3.86  -3.20                -2.80
Close.SMA.20             16.32  55.35  20.44                60.82
Close.SMA.50             13.83  69.66  17.94                72.01
daily.returns           -15.99  28.42  -0.12                12.34
ticker.return.factors   279.46 411.00 285.36               376.95
Open                     17.25  59.05  22.60                64.62
Close                    24.78  57.44  18.40                64.16
High                     15.68  58.38  17.02                63.38
Low                      25.60  63.08  17.93                68.94
Volume                   21.09  26.98  11.08                33.10
ticker.sma.signals       -2.80  -5.02  -1.88                -6.02
ticker.bbands.signals    -8.01   4.38  -6.22                -2.16
dn                       21.81  64.06  18.88                69.11
mavg                     12.74  55.22  20.62                60.41
up                        7.81  52.40  18.70                55.86
pctB                      5.20  37.77   2.11                35.55
mfi                       6.80  44.49   0.01                39.82
Close.EMA.14             12.16  47.77   2.08                48.01
ticker.rsi.signals       11.69  17.92   1.82                20.51
                        MeanDecreaseGini
ticker.multisma.signals             0.31
Close.SMA.20                       10.64
Close.SMA.50                       14.31
daily.returns                       8.16
ticker.return.factors             299.30
Open                               13.28
Close                              12.58
High                               11.44
Low                                14.27
Volume                             14.53
ticker.sma.signals                  0.44
ticker.bbands.signals               0.53
dn                                 15.27
mavg                               10.69
up                                 11.23
pctB                               10.68
mfi                                11.47
Close.EMA.14                       11.78
ticker.rsi.signals                  1.11
Time difference of 70.57273 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 107.1111 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.23%
Confusion matrix:
     buy hold sell class.error
buy  164    1    0 0.006060606
hold   0  544    0 0.000000000
sell   1    0  155 0.006410256
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -3.18   2.64   1.97                 2.05
Close.SMA.20             14.12  58.63  12.11                60.98
Close.SMA.50             -4.44  66.71  18.12                66.13
daily.returns            -8.80  22.27 -11.03                 7.72
ticker.return.factors   278.23 393.50 273.53               365.95
Open                     11.28  52.00  17.63                55.86
Close                     5.45  51.91  19.07                54.38
High                     -0.72  51.39  16.19                52.11
Low                      17.12  53.63  12.55                56.69
Volume                   19.77  33.85  20.92                42.65
ticker.sma.signals       -5.17   8.93   5.63                 7.44
ticker.bbands.signals    -1.09  -2.37  -0.42                -2.54
dn                       17.09  67.93  25.92                74.31
mavg                     13.00  58.51  14.46                60.97
up                        8.46  59.57  15.36                61.58
pctB                      3.75  39.17   3.61                36.81
mfi                      -9.16  33.67  10.53                27.52
Close.EMA.14              4.89  38.46   5.46                37.14
ticker.rsi.signals        0.24  -1.05   3.02                 0.90
                        MeanDecreaseGini
ticker.multisma.signals             0.21
Close.SMA.20                       13.32
Close.SMA.50                       14.11
daily.returns                       8.02
ticker.return.factors             281.60
Open                               12.83
Close                              11.11
High                               10.61
Low                                13.01
Volume                             17.63
ticker.sma.signals                  1.62
ticker.bbands.signals               0.10
dn                                 18.68
mavg                               13.39
up                                 12.85
pctB                               10.69
mfi                                11.89
Close.EMA.14                       10.92
ticker.rsi.signals                  0.09
Time difference of 77.74348 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 113.5137 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.67%
Confusion matrix:
     buy hold sell class.error
buy   65    1    1  0.02985075
hold   0  765    0  0.00000000
sell   1    3   66  0.05714286
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -1.30  -8.81   0.32                -8.78
Close.SMA.20              8.08  38.03   4.67                39.32
Close.SMA.50              1.12  36.70   1.67                36.84
daily.returns            19.05  40.65 -13.45                38.22
ticker.return.factors   233.54 333.08 245.47               320.68
Open                      3.46  34.82   1.98                35.50
Close                    12.51  37.76  -4.79                38.58
High                      7.29  37.90   1.20                39.15
Low                       1.92  42.37  -3.25                42.13
Volume                    6.59  49.81   8.36                45.28
ticker.sma.signals       -0.48   6.50   6.20                 7.77
ticker.bbands.signals    -0.76  -0.83  -2.42                -2.03
dn                        8.88  49.97   5.06                51.08
mavg                      6.85  39.32   7.78                40.88
up                        1.93  41.17  -2.80                40.77
pctB                     13.19  35.25   1.61                36.66
mfi                      11.85  37.97   8.11                40.56
Close.EMA.14             28.70  41.67  13.61                47.97
ticker.rsi.signals        1.47   7.19  -5.32                 5.84
                        MeanDecreaseGini
ticker.multisma.signals             0.20
Close.SMA.20                        5.09
Close.SMA.50                        4.80
daily.returns                       6.15
ticker.return.factors             149.88
Open                                5.00
Close                               5.67
High                                4.88
Low                                 5.82
Volume                             14.78
ticker.sma.signals                  0.56
ticker.bbands.signals               0.05
dn                                  7.89
mavg                                5.17
up                                  7.03
pctB                                5.79
mfi                                 6.32
Close.EMA.14                        7.22
ticker.rsi.signals                  0.16
Time difference of 51.03665 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 88.00661 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.88%
Confusion matrix:
     buy hold sell class.error
buy   61    3    3  0.08955224
hold   0  778    0  0.00000000
sell   0    2   62  0.03125000
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   2.63  -2.27  -1.73                -1.90
Close.SMA.20              5.75  46.79  -1.95                47.14
Close.SMA.50              4.70  49.66   4.39                50.69
daily.returns             5.35  36.93 -11.22                28.33
ticker.return.factors   261.01 371.69 236.20               344.17
Open                     16.37  47.40   2.73                48.64
Close                    17.34  51.71  -1.48                52.45
High                     12.46  47.98   1.99                49.08
Low                      14.44  55.23   1.64                56.06
Volume                  -14.82  33.43   3.91                21.12
ticker.sma.signals       -2.72   3.28  -0.17                 1.78
ticker.bbands.signals    -1.99   0.03   1.00                -0.19
dn                        6.14  51.48   0.17                51.89
mavg                      6.20  47.04  -0.08                47.30
up                        5.41  46.98   6.55                47.67
pctB                     -4.13  29.40   0.33                27.76
mfi                      -5.08  42.30   2.38                38.10
Close.EMA.14              2.49  40.17   1.90                39.50
ticker.rsi.signals        4.45  18.66   3.29                18.98
                        MeanDecreaseGini
ticker.multisma.signals             0.06
Close.SMA.20                        4.78
Close.SMA.50                        5.98
daily.returns                       5.94
ticker.return.factors             150.14
Open                                5.46
Close                               5.74
High                                5.46
Low                                 5.94
Volume                              8.97
ticker.sma.signals                  0.43
ticker.bbands.signals               0.08
dn                                  6.68
mavg                                4.82
up                                  5.59
pctB                                5.57
mfi                                 5.30
Close.EMA.14                        6.18
ticker.rsi.signals                  0.49
Time difference of 44.28667 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
In addition: There were 18 warnings (use warnings() to see them)
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> 
> 
> listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","GE")
> 
> for(counter in 8:9)
+ {
+ 
+ rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
+ setwd("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/data")
+ 	
+ tickerSymbol <- listOfCompanies[counter]
+ 
+ 
+ now1 <- Sys.time()
+ 
+ 
+ #tickerSymbol <- "AMZN"
+ 
+ print("Building the Model")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
+ 
+ print("Building Technical Indicators")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
+ 
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
+ 
+ print("Loading the Training Data from API's")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
+ 
+ print("Training Random Forest Model from training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
+ 
+ print("Training Arima Model from Training dataset")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
+ 
+ print("Predicting the Stocks for Test Period")
+ source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
+ 
+ print("Completed prediction for Stock for Test Period to" )
+ now2 <- Sys.time()
+ 
+ print(difftime(now2,now1,unit="sec"))
+ 
+ }
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.55%
Confusion matrix:
     buy hold sell class.error
buy   65    1    1  0.02985075
hold   0  765    0  0.00000000
sell   1    2   67  0.04285714
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.54  -9.65  -1.83                -9.71
Close.SMA.20              7.71  39.65   6.32                41.16
Close.SMA.50             -2.61  37.08   0.27                36.62
daily.returns            19.66  39.61 -12.97                37.74
ticker.return.factors   232.36 332.27 246.29               319.93
Open                      0.02  35.35   1.03                35.41
Close                    11.60  37.96  -5.58                38.67
High                      5.29  38.71  -0.07                39.39
Low                       0.76  43.52  -1.67                43.22
Volume                    8.09  48.60   9.15                44.57
ticker.sma.signals       -0.73   4.20   6.81                 5.82
ticker.bbands.signals    -0.24  -1.61  -0.48                -1.51
dn                        7.68  50.53   4.13                51.52
mavg                      5.72  39.79   5.57                40.97
up                        1.73  41.32  -0.87                41.22
pctB                     11.10  36.77   1.85                37.37
mfi                      12.82  36.87  10.49                40.98
Close.EMA.14             28.23  40.15  13.60                46.00
ticker.rsi.signals        2.63   7.74  -4.65                 6.98
                        MeanDecreaseGini
ticker.multisma.signals             0.20
Close.SMA.20                        5.18
Close.SMA.50                        4.85
daily.returns                       6.14
ticker.return.factors             149.08
Open                                5.01
Close                               5.65
High                                4.96
Low                                 5.94
Volume                             14.78
ticker.sma.signals                  0.55
ticker.bbands.signals               0.06
dn                                  7.95
mavg                                5.17
up                                  7.17
pctB                                5.88
mfi                                 6.39
Close.EMA.14                        7.26
ticker.rsi.signals                  0.15
Time difference of 41.4507 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
[1] "Completed prediction for Stock for Test Period to"
Time difference of 74.20028 secs
[1] "Building the Model"
[1] "Building Technical Indicators"
[1] "Loading the Training Data from API's"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.33%
Confusion matrix:
     buy hold sell class.error
buy  105    2    1  0.02777778
hold   0  679    0  0.00000000
sell   0    0  112  0.00000000
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -3.60   3.36  -2.82                 0.95
Close.SMA.20             -0.52  58.38  12.50                59.69
Close.SMA.50             12.03  61.82  -0.64                62.59
daily.returns            13.28  46.57  -5.03                42.90
ticker.return.factors   266.30 390.79 277.00               365.57
Open                      6.77  57.17  17.56                59.38
Close                     6.69  54.08  18.54                57.34
High                     -0.53  55.84  13.94                57.22
Low                      10.05  59.39  16.07                61.87
Volume                   -2.47  45.46  10.94                39.30
ticker.sma.signals       -8.87  11.66 -10.57                 1.30
ticker.bbands.signals    -3.20  -0.14  -1.20                -1.67
dn                       11.82  64.71  11.45                66.33
mavg                     -1.22  58.68  15.28                60.32
up                       -5.72  63.83  24.14                65.81
pctB                      1.88  40.12   0.35                38.28
mfi                       3.32  38.02   6.89                37.99
Close.EMA.14              7.34  45.80  -1.38                45.44
ticker.rsi.signals        3.54  15.76   0.12                15.49
                        MeanDecreaseGini
ticker.multisma.signals             0.30
Close.SMA.20                        7.87
Close.SMA.50                        9.60
daily.returns                       8.49
ticker.return.factors             227.09
Open                                9.25
Close                               8.92
High                                8.29
Low                                 9.52
Volume                             14.29
ticker.sma.signals                  1.51
ticker.bbands.signals               0.24
dn                                 10.59
mavg                                8.04
up                                  8.97
pctB                                7.99
mfi                                 8.89
Close.EMA.14                        8.38
ticker.rsi.signals                  0.54
Time difference of 55.61846 secs
[1] "Training Arima Model from Training dataset"
[1] "Predicting the Stocks for Test Period"
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
Error in predict.randomForest(ticker.rfmodel, tickerTestData) : 
  Type of predictors in new data do not match that of the training data.
In addition: Warning messages:
1: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"])) :
  object 'NA' not found
2: 'memory.limit()' is Windows-specific 
3: In rm(list = (ls()[ls() != "listOfCompanies"]["counter"])) :
  object 'NA' not found
4: 'memory.limit()' is Windows-specific 
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> 
> 
> #listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","GE")
> 
> #for(counter in 8:9)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> #setwd("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/data")
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> now1 <- Sys.time()
> 
> 
> tickerSymbol <- "AMZN"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.45%
Confusion matrix:
     buy hold sell class.error
buy  133    1    0 0.007462687
hold   0  644    0 0.000000000
sell   2    1  116 0.025210084
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   1.05  27.60   9.90                27.14
Close.SMA.20              5.10  51.26   7.26                52.35
Close.SMA.50             25.99  46.31  -1.79                50.58
daily.returns             4.50  21.57  -9.74                13.66
ticker.return.factors   301.33 441.42 275.57               397.98
Open                     12.05  51.21   8.49                53.88
Close                    17.65  49.71   8.60                53.42
High                     20.31  53.10   1.66                56.52
Low                      13.37  53.59   4.95                55.74
Volume                   -0.18  30.31  -1.13                23.19
ticker.sma.signals        2.15  -0.65   3.18                 1.69
ticker.bbands.signals     2.47  -4.12  -2.70                -4.09
dn                       -0.08  50.71   7.94                50.75
mavg                      2.65  51.98   7.88                53.12
up                       12.94  52.13   3.80                54.30
pctB                     -6.57  37.78   1.68                33.93
mfi                      -5.52  35.23  -1.94                27.94
Close.EMA.14             -6.40  36.67   1.32                31.92
ticker.rsi.signals       -3.92   5.20   1.39                 3.35
                        MeanDecreaseGini
ticker.multisma.signals             1.55
Close.SMA.20                        9.08
Close.SMA.50                       10.22
daily.returns                       6.79
ticker.return.factors             257.08
Open                               10.99
Close                              12.12
High                               11.48
Low                                11.48
Volume                             10.41
ticker.sma.signals                  1.02
ticker.bbands.signals               0.28
dn                                  8.97
mavg                                8.93
up                                 10.27
pctB                                9.02
mfi                                 9.88
Close.EMA.14                        8.79
ticker.rsi.signals                  0.25
Time difference of 58.40898 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 89.27043 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> 
> 
> #listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","GE")
> 
> #for(counter in 8:9)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> #setwd("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/data")
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> now1 <- Sys.time()
> 
> 
> tickerSymbol <- "AMZN"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.67%
Confusion matrix:
     buy hold sell class.error
buy  132    1    1  0.01492537
hold   0  644    0  0.00000000
sell   2    2  115  0.03361345
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals  -0.79  25.99  10.12                24.89
Close.SMA.20              5.11  51.57   8.16                52.55
Close.SMA.50             26.51  45.90  -1.44                49.89
daily.returns             7.69  20.06 -10.81                13.49
ticker.return.factors   299.03 436.58 277.39               396.90
Open                     11.96  50.93   7.31                53.53
Close                    18.09  49.42   7.20                53.24
High                     21.72  53.43  -0.12                56.75
Low                      13.22  53.12   4.23                55.44
Volume                    0.02  29.81  -4.89                20.89
ticker.sma.signals        5.23   0.00   0.81                 2.49
ticker.bbands.signals     4.12  -5.51  -2.11                -4.58
dn                        0.00  50.81   9.42                50.97
mavg                      5.76  52.24   7.60                53.49
up                       14.07  51.80   4.07                54.09
pctB                     -5.89  35.97   2.12                32.17
mfi                      -7.52  33.25  -1.25                25.00
Close.EMA.14             -4.98  37.19   2.23                32.97
ticker.rsi.signals       -3.60   4.63   0.43                 2.72
                        MeanDecreaseGini
ticker.multisma.signals             1.51
Close.SMA.20                        9.21
Close.SMA.50                       10.29
daily.returns                       6.90
ticker.return.factors             256.63
Open                               10.91
Close                              12.09
High                               11.58
Low                                11.66
Volume                             10.42
ticker.sma.signals                  1.05
ticker.bbands.signals               0.28
dn                                  9.05
mavg                                9.01
up                                 10.25
pctB                                8.96
mfi                                 9.76
Close.EMA.14                        8.80
ticker.rsi.signals                  0.26
Time difference of 57.98084 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 89.02246 secs
> 
> #}
> 
> 
> 
> 
> # TODO: Add comment
> # 
> # Author: ajinkya
> ###############################################################################
> 
> 
> 
> library(randomForest)
> library(quantmod)
> library(TTR)
> library(tseries)
> #library(gdata)
> 
> 
> closeAllConnections()
> 
> memory.limit(size=2566)
[1] Inf
Warning message:
'memory.limit()' is Windows-specific 
> 
> 
> 
> #listOfCompanies <- c("AAPL","IBM","AMZN","GOOG","C","DB","MS","CVX","GE")
> 
> #for(counter in 8:9)
> #{
> 
> #rm(list=(ls()[ls()!="listOfCompanies"]["counter"]))
> #setwd("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/data")
> 	
> #tickerSymbol <- listOfCompanies[counter]
> 
> 
> now1 <- Sys.time()
> 
> 
> tickerSymbol <- "AMZN"
> 
> print("Building the Model")
[1] "Building the Model"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/RemoveAll.R")
> 
> print("Building Technical Indicators")
[1] "Building Technical Indicators"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerBBandsSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerDailyReturnAbsolute.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerMultiSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerRsiSignals.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/technicalindicators/TickerSmaSignals.R")
> 
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/utils/IDOperator.R")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/persistence/CsvPersistence.R")
> 
> print("Loading the Training Data from API's")
[1] "Loading the Training Data from API's"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/etl/Load.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 1009
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
Warning message:
'memory.limit()' is Windows-specific 
> 
> print("Training Random Forest Model from training dataset")
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/randomforest/RandomForestModelSignals.R")
[1] "removing rows containing NA"
[1] "dropping unused levels"

Call:
 randomForest(formula = ticker.return.signals ~ ., data = tickerTrainData,      ntree = 10000, importance = TRUE, na.action = na.omit) 
               Type of random forest: classification
                     Number of trees: 10000
No. of variables tried at each split: 4

        OOB estimate of  error rate: 0.45%
Confusion matrix:
     buy hold sell class.error
buy  132    1    1  0.01492537
hold   0  644    0  0.00000000
sell   2    0  117  0.01680672
                           buy   hold   sell MeanDecreaseAccuracy
ticker.multisma.signals   0.92  25.89  10.95                25.36
Close.SMA.20              5.47  50.25   5.65                50.97
Close.SMA.50             25.75  46.51  -0.80                51.02
daily.returns             5.81  21.49 -11.58                13.04
ticker.return.factors   302.76 441.45 276.71               399.22
Open                     11.45  50.37   8.29                52.77
Close                    17.55  49.55   7.04                52.97
High                     20.71  51.45   2.24                54.81
Low                      16.20  51.81   3.27                54.37
Volume                    0.90  31.87  -2.21                24.05
ticker.sma.signals        2.17  -0.08   1.87                 1.53
ticker.bbands.signals     3.86  -4.74  -4.31                -4.61
dn                       -0.21  50.68   9.00                50.68
mavg                      4.58  51.40   8.15                52.80
up                       11.53  51.13   4.61                53.18
pctB                     -6.18  35.36   3.41                31.88
mfi                      -5.61  35.23  -4.24                26.50
Close.EMA.14             -4.93  36.23   1.42                32.31
ticker.rsi.signals       -0.15   5.25   2.41                 5.24
                        MeanDecreaseGini
ticker.multisma.signals             1.52
Close.SMA.20                        8.87
Close.SMA.50                       10.11
daily.returns                       6.76
ticker.return.factors             258.23
Open                               10.79
Close                              11.97
High                               11.16
Low                                11.32
Volume                             10.40
ticker.sma.signals                  1.02
ticker.bbands.signals               0.28
dn                                  9.01
mavg                                9.00
up                                 10.16
pctB                                8.85
mfi                                 9.83
Close.EMA.14                        8.74
ticker.rsi.signals                  0.25
Time difference of 57.33334 secs
> 
> print("Training Arima Model from Training dataset")
[1] "Training Arima Model from Training dataset"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/models/arima/ArimaModelPrices.R")
> 
> print("Predicting the Stocks for Test Period")
[1] "Predicting the Stocks for Test Period"
> source("/Users/ajinkyaingale/Software Engineering/MastersProjectdocuments/Code/system/analysis/technical/cran/trunk/srs-cran/src/run/testmodels/PredictTickerPrices.R")
[1] 2
[1] " calculating daily returns "
[1] " calculated percent daily returns "
[1] " ticker.return.signals"
NULL
[1] " calculating daily return signals "
[1] " ticker "
[1] 486
[1] " ticker.return.signals "
NULL
[1] " ticker.return.factors "
NULL
[1] "removing rows containing NA from test data"
[1] 387
[1] "renaming column names"
> 
> print("Completed prediction for Stock for Test Period to" )
[1] "Completed prediction for Stock for Test Period to"
> now2 <- Sys.time()
> 
> print(difftime(now2,now1,unit="sec"))
Time difference of 88.45925 secs
> 
> #}
> 
> 
> 
> 
